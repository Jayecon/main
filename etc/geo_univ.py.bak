"""
This module is to get GPS codes from Korean addesses using NAVERopenAPI.
"""

import csv
import requests
from geopy.distance import geodesic


def get_coordinates(address):
    """
    address : 한글주소
    return : GPS 위도와 경도
    """
    # 네이버 개발자 센터에서 발급한 Client ID 입력
    client_id = 'hm7vxmbsn9'
    # 네이버 개발자 센터에서 발급한 Client Secret 입력
    client_secret = 'BkfdSsA0nWPUcZAKzWEnrAq2PdGTA1a0Wtwpo3mv'
    url = ('https://naveropenapi.apigw.ntruss.com/map-geocode/v2/geocode?'
           f'query={address}'
           )
    headers = {
        'X-NCP-APIGW-API-KEY-ID': client_id,
        'X-NCP-APIGW-API-KEY': client_secret
    }
    response = requests.get(url, headers=headers, timeout=10)
    data = response.json()
    if 'addresses' in data and data['addresses']:
        # 첫 번째 결과의 경도와 위도를 추출합니다
        lat = data['addresses'][0]['y']
        lng = data['addresses'][0]['x']
        return lat, lng
    print(f"주소 '{address}'에 대한 좌표를 찾을 수 없습니다.")
    return None, None


def main():
    """
    아래의 두 CVS 파일명을 입력 할 것.
    """
    input_csv_filename = 'akgaddresslist.csv'           # 입력 CSV 파일명
    output_csv_filename = 'akgeoinfo.csv'  # 결과 CSV 파일명
    seoul_namsan_tower_coordinates = (37.551169, 126.988227)  # 서울 남산타워의 좌표

    # CSV 파일에서 주소를 읽어옴
    rows = []
    with open(input_csv_filename, 'r', newline='',
              encoding='utf-8') as csvfile:
        csv_reader = csv.reader(csvfile)
        next(csv_reader)       # 헤더를 건너뜁니다.
        for row in csv_reader:
            uniname = row[1]   # 대학코드
            zipcode = row[2]   # 대학명
            address = row[6]   # 주소
            source_coordinates = get_coordinates(address)
            if source_coordinates is not None:
                print(f"{uniname}의 정보를 얻습니다")
                distance = geodesic(seoul_namsan_tower_coordinates,
                                    source_coordinates).kilometers
                rows.append([uniname, zipcode, address,
                             source_coordinates[0], source_coordinates[1],
                             distance])
    # 결과를 CSV 파일로 저장
    with open(output_csv_filename, 'w', newline='',
              encoding='utf-8') as csvfile:
        csv_writer = csv.writer(csvfile)
        csv_writer.writerow(['uniname', 'zipcode', 'address',
                             'latitude', 'longitude', 'distance'])
        csv_writer.writerows(rows)


if __name__ == "__main__":
    main()
