
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   14.1   Copyright 1985-2015 StataCorp LP
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user 8-core Stata perpetual license:
       Serial number:  10699393
         Licensed to:  Sungjae Oh
                       Home

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.


running /Applications/Stata/profile.do ...

. do /Users/jay/GitHub/master/GOMS/goms_data.do 

. set more off

. clear

. cd ~/dropbox/goms
/Users/jay/Library/CloudStorage/Dropbox/GOMS

. /*List 개인변수 {{{*/
.         /*local demolablelist PID 본분교 국공사립 학위과정유형 주야간 전공계열 전공소분류CODE 전공세
> 분류CODE/전공명 ///
>                 학교유형 학교소재권역 학교소재지역 성별 출생년 출생월 연령(조사기준일_당시) 졸업년 
> 졸업월*/
.         local demovarlist pid branch found course daynight majorcat dpmt major ///
>                 school province area sex birthy birthm age graduy gradum/*}}}*/

. /*List 고교 및 대입 변수 {{{*/
.         /*local edulabellist 출신고교_졸업년 출신고교_졸업월 출신고교(국내외) 출신고교(국가명) 출신
> 고교시도(특별시/광역시/도)CODE 출신고교시군구(구/시/군)CODE ///
>                 고교/검정고시 고교계열 졸업대학(입학/편입) 졸업대학_입학/편입년 졸업대학_입학/편입월
>  대입모집(정시/수시) 입학전형(일반/특별) 입학전형세부유형 */
.         local eduvarlist f001 f002 f004 f005 f006 f007 ///
>                 f008 f009 f010 f011 f012 f013 f014 f170 /*}}}*/

. /*List 환경변수 {{{*/
.         /*local envlabellist 출생지역(국내외) 출생지역(국외국가명) 출생지역(특별시/광역시/도)CODE 출
> 생지역(구/시/군)CODE ///
>                 아버님_최종학력 아버님_최종학력이수여부 아버님_최종학력_생성변수 어머님_최종학력 어
> 머님_최종학력이수여부 어머님_최종학력_생성변수 ///
>                 아버님직업_대학입학(편입)당시 어머님직업_대학입학(편입)당시 부모님_월평균소득_대학입
> 학(편입)당시 부모님_월평균소득_현재 부모님_자산규모_현재 가중치*/
.         local envvarlist p018 p019 p020 p021 ///
>                 p026 p027 p028z p029 p030 p031z ///
>                 p032 p033 p034 p035 p036 wt /*}}}*/

. /*List 직업력변수 {{{*/
.         /*local econlabellist 산업10차대분류 산업10차중분류 산업10차소분류 직업2018대분류 직업*/
.         local econvarlist  a004_10 a005_10 a006_10 a007_2018 a008_2018 a009_2018 a010 a011 a021 a022
>  a059 a122 a356 a366 a376 a386

.         /*}}}*/
. /*List 조사변수 변화를 해결하기 위한 결측변수 {{{*/
.         local misvarlist07 branch daynight a059 a356 a366 a376 a386 f007 f008 f013 f014 f170 p021 p0
> 36 

.         local misvarlist08 daynight a059 f013 f014 f170 p021 p036

.         local misvarlist09 f013 a059 f170 p036

.         local misvarlist10 f013 a059 f170 p036

.         local misvarlist11 f013 a059 f170 p036

.         local misvarlist12 f013 a059 f170 p021 p036

.         local misvarlist13 f013 f170 p019 p036

.         local misvarlist14 f005 f013 f170 p019 p036

.         local misvarlist15 f170

.         local misvarlist16 f014 

.         local misvarlist17 f014 /*}}}*/

. /*List 년도별 value label {{{*/
.         local labelist07 V6_A LABO 

.         local labelist08 V13_A LABB LABBD LABCG LABCH LABCI LABCJ LABCK

.         local labelist09 LABCD LABCE LABN LABO LABBT LABEP LABEN LABEO LABEQ LABER LABES

.         local labelist10 LABA V14_A LABJ LABF LABG

.         local labelist11 LABE LABF LABN LABAC

.         local labelist12 LABF LABR LABE LABAW

.         local labelist13 LABE LABF LABJ

.         local labelist14 LABE 

.         local labelist15 LABE LABF

.         local labelist16 LABAS LABK LABBR LABBS LABDM LABDN LABDO

.         local labelist17 LABCC LABEI LABEJ LABEL LABEM LABEK LABEN LABEO/*}}}*/

. /*년도별 파일을 goms??.dta 로 각각 저장하기{{{*/
. forvalue x = 7/17 {
  2.         local yr : disp %02.0f  = `x'
  3.         use ~/dropbox/GOMS/rawdata/GP`yr'.dta
  4.         rename g`yr'1* *
  5.         drop if missing(sex)
  6.         foreach i of local misvarlist`yr' {
  7.                 gen `i' = .
  8.         }
  9.         keep `demovarlist' `eduvarlist' `envvarlist' `econvarlist'
 10.         drop `misvarlist`yr''
 11.         di "year = " 2000+`x'
 12.         foreach i of local labelist`yr'{
 13.                 label copy `i' G`yr'1`i'
 14.         }
 15.         /*년도별 변수 value label{{{*/ 
.         if "`x'" == "7" {
 16.                 label value major G071V6_A
 17.                 label value p032 G071LABO
 18.                 label value p033 G071LABO
 19.         }
 20.         else if "`x'" == "8" {
 21.                 label value birthm G081V13_A
 22.                 label value f001 G081LABB
 23.                 label value f002 G081LABB
 24.                 label value f011 G081LABBD
 25.                 label value f012 G081LABBD
 26.                 label value p026 G081LABCG
 27.                 label value p027 G081LABCH
 28.                 label value p028 zG081LABCI
 29.                 label value p029 G081LABCG
 30.                 label value p030 G081LABCH
 31.                 label value p031 zG081LABCI
 32.                 label value p032 G081LABCJ
 33.                 label value p033 G081LABCJ
 34.                 label value p034 G081LABCK
 35.                 label value p035 G081LABCK
 36.         }
 37.         else if "`x'" == "9" {
 38.                 label value f001 G091LABCD
 39.                 label value f002 G091LABCE
 40.                 label value f006 G091LABN
 41.                 label value f007 G091LABO
 42.                 label value f011 G091LABCD
 43.                 label value f012 G091LABCE
 44.                 label value p018 G091LABBT
 45.                 label value p019 G091LABEP
 46.                 label value p020 G091LABN 
 47.                 label value p021 G091LABO 
 48.                 label value p026 G091LABEN
 49.                 label value p027 G091LABEO
 50.                 label value p028 zG091LABEQ
 51.                 label value p029 G091LABEN
 52.                 label value p030 G091LABEO
 53.                 label value p031 zG091LABEQ
 54.                 label value p032 G091LABER
 55.                 label value p033 G091LABER
 56.                 label value p034 G091LABES
 57.                 label value p035 G091LABES
 58.         }
 59.         else if "`x'" == "10" {
 60.                 label value area G101LABA 
 61.                 label value birthm G101V14_A
 62.                 label value f002 G101LABJ 
 63.                 label value f004 G101LABF 
 64.                 label value f006 G101LABA 
 65.                 label value f007 G101LABG 
 66.                 label value p020 G101LABA 
 67.                 label value p021 G101LABG 
 68.         }
 69.         else if "`x'" == "11" {
 70.                 label value f006 G111LABE 
 71.                 label value f007 G111LABF 
 72.                 label value f011 G111LABN 
 73.                 label value f012 G111LABN 
 74.                 label value p020 G111LABE 
 75.                 label value p021 G111LABF 
 76.                 label value p028z G111LABAC
 77.                 label value p031z G111LABAC
 78.         }
 79.         else if "`x'" == "12" {
 80.                 label value f002 G121LABF 
 81.                 label value f006 G121LABR 
 82.                 label value f007 G121LABE 
 83.                 label value p020 G121LABAW
 84.         }
 85.         else if "`x'" == "13" {
 86.                 label value f007 G131LABE 
 87.                 label value f011 G131LABF 
 88.                 label value f012 G131LABF 
 89.                 label value p021 G131LABE 
 90.                 label value p028 zG131LABJ 
 91.                 label value p031 zG131LABJ 
 92.         }
 93.         else if "`x'" == "14" {
 94.                 label value f007 G141LABE 
 95.                 label value p021 G141LABE 
 96.         }
 97.         else if "`x'" == "15" {
 98.                 label value f006 G151LABE 
 99.                 label value f007 G151LABF 
100.                 label value p021 G151LABF 
101.         }
102.         else if "`x'" == "16" {
103.                 label value f001 G161LABAS
104.                 label value f002 G161LABAS
105.                 label value f004 G161LABK 
106.                 label value f006 G161LABBR
107.                 label value f007 G161LABBS
108.                 label value p018 G161LABK 
109.                 label value p021 G161LABDM
110.                 label value p027 G161LABDN
111.                 label value p028 zG161LABDO
112.                 label value p030 G161LABDN
113.                 label value p031 zG161LABDO
114.         }
115.         else if "`x'" == "17" {
116.                 label value f001 G171LABCC
117.                 label value p020 G171LABEI
118.                 label value p021 G171LABEJ
119.                 label value p026 G171LABEK
120.                 label value p027 G171LABEL
121.                 label value p028 zG171LABEM
122.                 label value p029 G171LABEK
123.                 label value p030 G171LABEL
124.                 label value p031 zG171LABEM
125.                 label value p032 G171LABEN
126.                 label value p033 G171LABEN
127.                 label value p034 G171LABEO
128.                 label value p035 G171LABEO
129.         }/*}}}*/
130.         /*년도별 전공 선별{{{*/ 
.         gen byte majtyp = .
131.         label define MAJTYP 1 "의학" 2 "치의학" 3 "한의학" 4 "수의학" 5 "약학"  6 "경영" 7 "경제"
>  8 "법" 9 "기타 문과"
132.         label value majtyp MAJTYP
133.         if ("`x'" == "7") {
134.                 replace majtyp = 1 if inlist(major , 1798 , 1799 )
135.                 replace majtyp = 2 if inlist(major , 2362 )
136.                 replace majtyp = 3 if inlist(major , 2632 )
137.                 replace majtyp = 4 if inlist(major , 1306 , 1307 )
138.                 replace majtyp = 5 if inlist(major , 1516 , 1517 , 1518 , 2173 , 2174 ) 
139.                 replace majtyp = 6 if inrange(major , 118 , 150 )
140.                 replace majtyp = 7 if inrange(major , 151 , 165 )
141.                 replace majtyp = 8 if inrange(major , 905 , 912 )
142.                 replace majtyp = 9 if missing(majtyp) & inlist(majorcat , 1 , 2, 3 )
143.         }
144.         else {
145.                 replace majtyp = 1 if inlist(major , "U06010100003", "U06010100004" , "U060101000
> 05" , "U06010100017" , "U06010100021"  )
146.                 replace majtyp = 2 if inlist(major , "U06010200005" )
147.                 replace majtyp = 3 if inlist(major , "U06010300002" )
148.                 replace majtyp = 4 if inlist(major , "U05020300003" , "U05020300015" )
149.                 replace majtyp = 5 if strpos(major , "U060301" ) 
150.                 replace majtyp = . if inlist(major , "U06030100021" ) 
151.                 replace majtyp = 6 if strpos(major , "U020102" )
152.                 replace majtyp = 7 if strpos(major , "U020101" )
153.                 replace majtyp = 8 if strpos(major , "U020201" )
154.                 replace majtyp = 9 if missing(majtyp) & inlist(majorcat , 1 , 2, 3 )
155.         } /*}}}*/
156.         gen year = `x' +2000
157.                 label var year "조사년도"
158.         gen wave = `x' - 6
159.                 label var wave "조사회차"
160.         /* 대학, 고교정보 합치기{{{*/
.                 rename pid g`yr'1pid
161.                 merge 1:1 g`yr'1pid using ~/dropbox/goms/rawdata/goms_gu`yr' , nogen
162.                 rename g`yr'1* * 
163.                 capture label var uniname "출신대학명"
164.                 capture label var unicode "출신대학code"
165.                 if (`x' >= 9 ){
166.                         merge 1:1 pid using ~/dropbox/goms/rawdata/goms_gh`yr' , nogen
167.                         replace hsname = "" if strpos(hsname, "-1")
168.                         replace hsname = "" if strpos(hsname, "-2")
169.                         replace hsname = "" if strpos(hsname, "모름")
170.                         replace hsname = "" if strpos(hsname, "무응답")
171.                         replace hsname = "" if strpos(hsname, "비공개")
172.                         replace hsname = "" if strpos(hsname, "거절")
173.                         replace hsname = "" if strpos(hsname, "탁송")
174.                         capture label var hsname "출신고교명"
175.                         capture label var hscode "출신고교code"
176.                 }
177.                 rename * *`yr'
178.         /*}}}*/
.         if ("`x'" == "15" ){
179.                 destring school15 , replace
180.         }
181.         if (`x' >= 9 ){
182.                 rename hs????`yr' hs????
183.         }
184.         rename uni????`yr' uni????
185.         mvdecode _all , mv(-1, -3)
186.         mvdecode p034* , mv(9, 10)
187.         mvdecode p026* , mv(8)
188.         mvdecode p029* , mv(8)
189.         if ("`x'" == "7") {
190.                 rename unibran branch07
191.                 label var branch "본분교"
192.                 save ~/dropbox/goms/goms_master.dta , replace
193.         }
194.         else {
195.                 append using ~/dropbox/goms/goms_master.dta
196.                 save ~/dropbox/goms/goms_master.dta , replace
197.         }
198. }/*}}}*/
